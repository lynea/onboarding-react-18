import {
  Box,
  Button,
  GridItem,
  Heading,
  Progress,
  Text,
} from "@chakra-ui/react";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Layout } from "../../components/Layout";
import { GrFormNextLink, GrFormPreviousLink } from "react-icons/gr";
import { MdDone } from "react-icons/md";
import { FunctionComponent, useState } from "react";
import { useRouter } from "next/router";

//www.test.nl?chapter=1&step=1 (check if user is eligable, auto load correct step)
//www.test.nl/completed
//www.test.nl/recourses

// chapters
// steps
// ive done it, ill do it later

type StepperProps = {
  onNextClick: () => void;
  onPreviousClick: () => void;
};

const Stepper: FunctionComponent<StepperProps> = ({
  onNextClick,
  onPreviousClick,
}) => (
  <GridItem
    colSpan={12}
    marginTop="2rem"
    bg="white"
    boxShadow="md"
    p="6"
    rounded="md"
    display="flex"
    justifyContent="space-between"
    alignItems="center"
  >
    <Button
      leftIcon={<GrFormPreviousLink />}
      colorScheme="purple"
      variant="outline"
      onClick={onPreviousClick}
    >
      Previous step
    </Button>
    <Box w="40rem">
      {/* <Text fontSize="md" marginBottom="0.2rem">
        <strong>chapter: </strong> well hello there
      </Text>
      <Progress value={80} colorScheme="red" marginBottom="1rem" /> */}
      <Text fontSize="md" marginBottom="0.2rem">
        <strong>step: </strong> 1/6
      </Text>
      <Progress value={80} colorScheme="purple" />
    </Box>

    <Button
      rightIcon={<GrFormNextLink />}
      colorScheme="purple"
      variant="outline"
      onClick={onNextClick}
    >
      Next step
    </Button>
  </GridItem>
);

type Step = {
  title: string;
  body: string;
  completable: boolean;
  priority: number;
};

type Chapter = {
  title: string;
  steps: Step[];
};

type ChapterProps = Chapter & {
  currentStep: number;
};

const Step: FunctionComponent<Step> = ({ body, title, completable }) => (
  <>
    <Heading as="h2" size="lg" marginBottom="2.5rem">
      {title}
    </Heading>
    <Text fontSize="xl">{body}</Text>

    {completable && (
      <Button
        marginTop="2rem"
        w="fit-content"
        alignSelf="center"
        loadingText="Submitting"
        colorScheme="teal"
        variant="outline"
        rightIcon={<MdDone />}
      >
        mark as completed
      </Button>
    )}
  </>
);

//check which chapter it is and inject the steps default step is 1

const Chapter: FunctionComponent<ChapterProps> = ({
  title,
  steps,
  currentStep,
}) => {
  const step = steps[currentStep];

  return (
    <GridItem
      colSpan={12}
      bg="gray.100"
      boxShadow="md"
      p="6"
      rounded="md"
      display="flex"
      justifyContent="space-between"
      flexDirection="column"
    >
      <Heading as="h1" size="2xl" marginBottom="2.5rem">
        {title}
      </Heading>

      <Step {...step} />
    </GridItem>
  );
};

const chapters: Chapter[] = [
  {
    title: "about mijndomein",
    steps: [
      {
        completable: false,
        title: "step1",
        body: "hello there",
        priority: 1,
      },
      {
        completable: true,
        title: "step2",
        body: "hello there",
        priority: 2,
      },
    ],
  },
];

const Home: NextPage = () => {
  const router = useRouter();

  const { step, chapter } = router.query;

  if (!step || !chapter) {
    return <> no step or chapter specified </>;
  }
  //@ts-ignore
  const currentChapter = chapters[chapter];

  const handleNextStep = () => {
    router.push(
      //@ts-ignore
      `/onboarding/?chapter=${chapter}&step=${parseInt(step) + 1}`,
      undefined,
      {
        shallow: true,
      }
    );
  };
  const handlePreviousStep = () => {
    router.push(
      //@ts-ignore
      `/onboarding/?chapter=${chapter}&step=${parseInt(step) - 1}`,
      undefined,
      {
        shallow: true,
      }
    );
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Layout>
          <Chapter currentStep={Number(step)} {...currentChapter} />
          <Stepper
            onNextClick={handleNextStep}
            onPreviousClick={handlePreviousStep}
          />
        </Layout>
      </main>

      <footer></footer>
    </div>
  );
};

export default Home;
